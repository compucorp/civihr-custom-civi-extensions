console.log('Controller: FormPayCtrl');define(['controllers/controllers'], function(controllers){    controllers.controller('FormPayCtrl',['$scope','$filter','settings',        function($scope, $filter, settings){            var contractPay = $scope.contract.pay || {},                defaults = {                    pay_amount: 0,                    pay_currency: settings.CRM.defaultCurrency,                    pay_cycle: '2',                    pay_unit: 'Year'                },                utilsPayScaleGrade = $scope.utils.payScaleGrade,                workPerYear = {                    Year: 1,                    Month: 12,                    Week: 52,                    Fortnight: 26,                    Day: 260,                    Hour: 2080                };            $scope.collapseBenDed = !contractPay.annual_benefits.length && !contractPay.annual_deductions.length;            $scope.benefits_per_cycle = (0).toFixed(2);            $scope.benefits_per_cycle_net = 0;            $scope.deductions_per_cycle = (0).toFixed(2);            contractPay.is_paid = contractPay.is_paid || 0;            contractPay.pay_is_auto_est = '0';            function getCycles() {                var cycles = 1;                switch (+contractPay.pay_cycle) {                    case 1:                        cycles = workPerYear.Week;                        break;                    case 2:                        cycles = workPerYear.Month;                        break;                }                return cycles;            }            $scope.add = function(array){                array.push({                    "name": "",                    "type": "",                    "amount_pct": "",                    "amount_abs": ""                });            };            $scope.applyPayScaleGradeData = function(){                if (contractPay.pay_scale) {                    var payScaleGrade = $filter('getObjById')(utilsPayScaleGrade, contractPay.pay_scale);                    contractPay.pay_amount = payScaleGrade.amount || defaults.pay_amount;                    contractPay.pay_currency = payScaleGrade.currency || defaults.pay_currency;                    contractPay.pay_unit = payScaleGrade.periodicity || defaults.pay_unit;                }            };            $scope.calcAnnualPayEst = function(){                if (+contractPay.is_paid) {                    contractPay.pay_annualized_est = (contractPay.pay_amount * workPerYear[contractPay.pay_unit] || 0).toFixed(2);                }            };            $scope.calcBenefitsPerCycle = function(){                if (+contractPay.is_paid) {                    var i = 0, len = contractPay.annual_benefits.length, annualBenefits = 0;                    for (i; i < len; i++) {                        if (+contractPay.annual_benefits[i].type == 2) {                            contractPay.annual_benefits[i].amount_abs = (contractPay.annual_benefits[i].amount_pct/100 * contractPay.pay_annualized_est).toFixed(2);                        }                        annualBenefits += +contractPay.annual_benefits[i].amount_abs;                    }                    $scope.benefits_per_cycle = (annualBenefits / getCycles()).toFixed(2);                }            };            $scope.calcBenefitsPerCycleNet = function(){                if (+contractPay.is_paid) {                    $scope.benefits_per_cycle_net = $scope.benefits_per_cycle - $scope.deductions_per_cycle;                }            };            $scope.calcDeductionsPerCycle = function(){                if (+contractPay.is_paid) {                    var i = 0, len = contractPay.annual_deductions.length, annualDeductions = 0;                    for (i; i < len; i++) {                        if (+contractPay.annual_deductions[i].type == 2) {                            contractPay.annual_deductions[i].amount_abs = (contractPay.annual_deductions[i].amount_pct/100 * contractPay.pay_annualized_est).toFixed(2);                        }                        annualDeductions += +contractPay.annual_deductions[i].amount_abs;                    }                    $scope.deductions_per_cycle = (annualDeductions / getCycles()).toFixed(2);                }            };            $scope.calcPayPerCycleGross = function(){                if (+contractPay.is_paid) {                    contractPay.pay_per_cycle_gross = (contractPay.pay_annualized_est / getCycles()).toFixed(2);                }            }            $scope.calcPayPerCycleNet = function(){                if (+contractPay.is_paid) {                    contractPay.pay_per_cycle_net = (+contractPay.pay_per_cycle_gross + +$scope.benefits_per_cycle_net).toFixed(2);                }            }            $scope.resetData = function(){                contractPay.pay_scale = '';                contractPay.pay_amount = '';                contractPay.pay_unit = '';                contractPay.pay_currency = '';                contractPay.pay_annualized_est = '';                contractPay.pay_is_auto_est = '';                contractPay.annual_benefits = [];                contractPay.annual_deductions = [];                contractPay.pay_cycle = '';                contractPay.pay_per_cycle_gross = '';                contractPay.pay_per_cycle_net = '';                $scope.benefits_per_cycle = '';                $scope.deductions_per_cycle = '';            };            $scope.setDefaults = function(){                contractPay.pay_cycle = defaults.pay_cycle;                contractPay.pay_currency = defaults.pay_currency;                contractPay.pay_is_auto_est = '0';                contractPay.pay_amount = (0).toFixed(2);            };            $scope.remove = function(array, index){                array.splice(index, 1);            };            $scope.$watch('contract.pay.pay_amount', $scope.calcAnnualPayEst);            $scope.$watch('contract.pay.pay_unit', $scope.calcAnnualPayEst);            $scope.$watch('contract.pay.pay_annualized_est', function(){                $scope.calcPayPerCycleGross();                $scope.calcBenefitsPerCycle();                $scope.calcDeductionsPerCycle();            });            $scope.$watch('contract.pay.annual_benefits', $scope.calcBenefitsPerCycle,true);            $scope.$watch('contract.pay.annual_deductions', $scope.calcDeductionsPerCycle,true);            $scope.$watch('benefits_per_cycle',$scope.calcBenefitsPerCycleNet);            $scope.$watch('deductions_per_cycle',$scope.calcBenefitsPerCycleNet);            $scope.$watch('benefits_per_cycle_net',$scope.calcPayPerCycleNet);            $scope.$watch('contract.pay.pay_per_cycle_gross',$scope.calcPayPerCycleNet);        }]);});