define(['services/services'], function (services) {    services.factory('ExampleService',['settings', '$log' , '$q', function(settings, $log, $q){        $log.debug('Service: ExampleService');        return {            getContracts: function(contact_id) {                console.log(contact_id);                var deferred = $q.defer();                // Return only the non deleted contracts                CRM.api3('HRJobContract', 'get', {                    "sequential": 1,                    "contact_id": contact_id,                    "deleted": 0,                    "return": "title"                }).done(function(result) {                    console.log(result);                    // Passing data to deferred's resolve function on successful completion                    deferred.resolve(result);                }).error(function(result) {                    // Sending a friendly error message in case of failure                    deferred.reject("An error occured while fetching items");                });                // Returning the promise object                return deferred.promise;            },            getAllJobRoles: function(job_contract_ids) {                console.log(job_contract_ids);                var deferred = $q.defer();                CRM.api3('HrJobRoles', 'get', {                    "sequential": 1,                    "return": "id,job_contract_id,title",                    "job_contract_id": {"IN": job_contract_ids}                }).done(function(result) {                    console.log(result);                    // Passing data to deferred's resolve function on successful completion                    deferred.resolve(result);                }).error(function(result) {                    // Sending a friendly error message in case of failure                    deferred.reject("An error occured while fetching items");                });                // Returning the promise object                return deferred.promise;            },            deleteJobRole: function(job_role_id) {                console.log(job_role_id);                var deferred = $q.defer();                CRM.api3('HrJobRoles', 'delete', {                    "sequential": 1,                    "id": job_role_id                }).done(function(result) {                    console.log(result);                    // Passing data to deferred's resolve function on successful completion                    deferred.resolve(result);                }).error(function(result) {                    // Sending a friendly error message in case of failure                    deferred.reject("An error occured while deleting items");                });                // Returning the promise object                return deferred.promise;            },            createJobRole: function(job_roles_data) {                console.log(job_roles_data);                var deferred = $q.defer();                CRM.api3('HrJobRoles', 'create', {                    "sequential": 1,                    "job_contract_id": job_roles_data.job_contract_id,                    "title": job_roles_data.title,                }).done(function(result) {                    console.log(result);                    // Passing data to deferred's resolve function on successful completion                    deferred.resolve(result);                }).error(function(result) {                    // Sending a friendly error message in case of failure                    deferred.reject("An error occured while adding items");                });                // Returning the promise object                return deferred.promise;            },            updateJobRole: function(role_id, job_roles_data) {                console.log(job_roles_data);                var deferred = $q.defer();                CRM.api3('HrJobRoles', 'create', {                    "sequential": 1,                    "id": role_id,                    "job_contract_id": job_roles_data.job_contract_id,                    "title": job_roles_data.title,                }).done(function(result) {                    console.log(result);                    // Passing data to deferred's resolve function on successful completion                    deferred.resolve(result);                }).error(function(result) {                    // Sending a friendly error message in case of failure                    deferred.reject("An error occured while updating items");                });                // Returning the promise object                return deferred.promise;            },        }    }]);});